{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","components/BandAdd.js","components/BandList.js","components/BandChart.js","App.js","BandNamesApp.js","index.js"],"names":["SockectContext","createContext","SockectProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","Provider","value","BandAdd","valor","setValor","useContext","onSubmit","e","preventDefault","trim","length","emit","name","type","className","placeholder","onChange","target","BandList","bands","setBands","off","map","band","onClick","id","nuevoNombre","cambioNombre","onBlur","nombre","votes","BandChart","crearGrafica","ctx","document","getElementById","Chart","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","animation","scales","xAxes","stacked","App","BandNamesApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.33f8dcda.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nimport { useSocket } from \"../hooks/useSocket\";\r\n\r\nexport const SockectContext = createContext();\r\n\r\nexport const SockectProvider = ({ children }) => {\r\n  const { socket, online } = useSocket(\r\n    \"https://socket-io-bandames.herokuapp.com/\"\r\n  );\r\n\r\n  return (\r\n    <SockectContext.Provider value={{ socket, online }}>\r\n      {children}\r\n    </SockectContext.Provider>\r\n  );\r\n};\r\n","import { useEffect, useMemo, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport const useSocket = (serverPath) => {\r\n  const socket = useMemo(\r\n    () =>\r\n      io.connect(serverPath, {\r\n        transports: [\"websocket\"],\r\n      }),\r\n    [serverPath]\r\n  );\r\n\r\n  const [online, setOnline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOnline(socket.connected);\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"connect\", () => {\r\n      setOnline(true);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"disconnect\", () => {\r\n      setOnline(false);\r\n    });\r\n  }, [socket]);\r\n\r\n  return {\r\n    socket,\r\n    online,\r\n  };\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { SockectContext } from \"../context/SocketContext\";\r\n\r\nexport const BandAdd = () => {\r\n  const [valor, setValor] = useState(\"\");\r\n  const { socket } = useContext(SockectContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (valor.trim().length > 0) {\r\n      socket.emit(\"nuevo-name\", { name: valor });\r\n      setValor(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Agregar Banda</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Nuevo Nombre de banda\"\r\n          value={valor}\r\n          onChange={(e) => setValor(e.target.value)}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { SockectContext } from \"../context/SocketContext\";\r\n\r\nexport const BandList = () => {\r\n  const [bands, setBands] = useState([]);\r\n  const { socket } = useContext(SockectContext);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"current-bands\", (bands) => {\r\n      setBands(bands);\r\n    });\r\n\r\n    return () => socket.off(\"current-bands\"); //por si se destrulle el componente\r\n  }, [socket]);\r\n\r\n  const cambioNombre = (e, id) => {\r\n    const nuevoNombre = e.target.value;\r\n    setBands((bands) =>\r\n      bands.map((band) => {\r\n        if (band.id === id) {\r\n          band.name = nuevoNombre;\r\n        }\r\n        return band;\r\n      })\r\n    );\r\n  };\r\n  const onPerdioFoco = (id, nombre) => {\r\n    socket.emit(\"change-name\", { id, nombre });\r\n  };\r\n\r\n  const votar = (id) => {\r\n    socket.emit(\"votar-banda\", id);\r\n  };\r\n\r\n  const borrar = (id) => {\r\n    socket.emit(\"borrar-banda\", id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table table-stripped\">\r\n        <thead>\r\n          <tr>\r\n            <th></th>\r\n            <th>Nombre</th>\r\n            <th>Votos</th>\r\n            <th>Borrar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {bands.map((band) => (\r\n            <tr key={band.id}>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => votar(band.id)}\r\n                >\r\n                  +1\r\n                </button>\r\n              </td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={band.name}\r\n                  onChange={(e) => cambioNombre(e, band.id)}\r\n                  onBlur={() => onPerdioFoco(band.id, band.name)}\r\n                />\r\n              </td>\r\n              <td>\r\n                <h3>{band.votes}</h3>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => borrar(band.id)}\r\n                >\r\n                  Borrar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Chart } from \"chart.js\";\r\nimport { SockectContext } from \"../context/SocketContext\";\r\n\r\nexport const BandChart = () => {\r\n  const { socket } = useContext(SockectContext);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"current-bands\", (bands) => {\r\n      crearGrafica(bands);\r\n    });\r\n  }, [socket]);\r\n\r\n  const crearGrafica = (bands = []) => {\r\n    const ctx = document.getElementById(\"myChart\");\r\n    new Chart(ctx, {\r\n      type: \"horizontalBar\",\r\n      data: {\r\n        labels: bands.map((band) => band.name),\r\n        datasets: [\r\n          {\r\n            label: \"# of Votes\",\r\n            data: bands.map((band) => band.votes),\r\n            backgroundColor: [\r\n              \"rgba(255, 99, 132, 0.2)\",\r\n              \"rgba(54, 162, 235, 0.2)\",\r\n              \"rgba(255, 206, 86, 0.2)\",\r\n              \"rgba(75, 192, 192, 0.2)\",\r\n              \"rgba(153, 102, 255, 0.2)\",\r\n              \"rgba(255, 159, 64, 0.2)\",\r\n            ],\r\n            borderColor: [\r\n              \"rgba(255, 99, 132, 1)\",\r\n              \"rgba(54, 162, 235, 1)\",\r\n              \"rgba(255, 206, 86, 1)\",\r\n              \"rgba(75, 192, 192, 1)\",\r\n              \"rgba(153, 102, 255, 1)\",\r\n              \"rgba(255, 159, 64, 1)\",\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        animation: false,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              stacked: true,\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return <canvas id=\"myChart\"></canvas>;\r\n};\r\n","import React, { useContext } from \"react\";\n\nimport { SockectContext } from \"./context/SocketContext\";\nimport { BandAdd } from \"./components/BandAdd\";\nimport { BandList } from \"./components/BandList\";\nimport { BandChart } from \"./components/BandChart\";\n\nexport const App = () => {\n  const { online } = useContext(SockectContext);\n\n  return (\n    <div className=\"container\">\n      <div className=\"alert\">\n        <p>\n          Service status\n          {online ? (\n            <span className=\"text-success\"> Online</span>\n          ) : (\n            <span className=\"text-danger\"> Offline</span>\n          )}\n        </p>\n      </div>\n\n      <h1>BandNames</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col\">\n          <BandChart />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-4\">\n          <BandAdd />\n        </div>\n        <div className=\"col-12 col-md-8\">\n          <BandList />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\r\nimport { App } from \"./App\";\r\nimport { SockectProvider } from \"./context/SocketContext\";\r\n\r\nexport const BandNamesApp = () => {\r\n  return (\r\n    <SockectProvider>\r\n      <App />\r\n    </SockectProvider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BandNamesApp } from \"./BandNamesApp\";\n\nReactDOM.render(<BandNamesApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}